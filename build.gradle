plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'br.com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor('org.hibernate:hibernate-jpamodelgen')

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// JPAModelGen
def JPA_MODELGEN_PATH='src/jpaModelgen/java'

sourceSets {
    main {
        java {
            srcDir JPA_MODELGEN_PATH
        }
    }
}

task cleanJpaModelgen {
    doLast {
        project.delete(JPA_MODELGEN_PATH)
    }
}

tasks.withType(JavaCompile) {
    def jpaModelgenDir = file(JPA_MODELGEN_PATH)
    options.annotationProcessorGeneratedSourcesDirectory =  jpaModelgenDir
    outputs.dir(jpaModelgenDir)
}

clean.dependsOn ('cleanJpaModelgen')
compileJava.dependsOn ('cleanJpaModelgen')


